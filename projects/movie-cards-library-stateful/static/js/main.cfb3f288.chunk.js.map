{"version":3,"sources":["components/Header.jsx","components/SearchFormInputText.jsx","components/SearchFormInputCheckbox.jsx","components/SearchFormSelect.jsx","components/SearchBar.jsx","components/AMInput.jsx","components/AMTextarea.jsx","components/AMSelect.jsx","components/AMButton.jsx","components/addMovieSetup.js","components/AddMovie.jsx","components/Rating.jsx","components/Favorite.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/MovieLibrary.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","SearchFormInputText","this","props","value","callback","id","data-testid","htmlFor","type","onChange","defaultProps","SearchFormInputCheckbox","checked","SearchFormSelect","SearchBar","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","AMInput","options","call","name","content","max","min","step","AMTextarea","AMSelect","optionTag","optionTagValue","optionTagContent","map","x","i","key","AMButton","form","onClick","setupFormInputs","tit","sub","img","rat","txt","sel","btn","AddMovie","state","subtitle","title","imagePath","storyline","rating","genre","handleChange","bind","handleClick","target","setState","Number","event","preventDefault","movie","Object","entries","reduce","acc","bookmarked","Rating","Favorite","toLowerCase","replace","MovieCard","alt","src","MovieList","movies","applyFilter","array","marked","result","search","filter","includes","MovieLibrary","allMovies","onFavorite","index","findIndex","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6UAYeA,E,4JATb,WACE,OACE,4BAAQC,UAAU,qBAChB,wBAAIA,UAAU,cAAd,4B,GAJaC,IAAMC,W,eCCrBC,E,4JACJ,WAAU,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,yBAAKP,UAAU,QACb,2BACEQ,GAAG,mBACHC,cAAY,mBACZC,QAAQ,aACRV,UAAU,cAJZ,kBAOE,2BACEQ,GAAG,aACHG,KAAK,OACLF,cAAY,aACZH,MAAQA,EACRM,SAAWL,EACXP,UAAU,uB,GAlBYC,IAAMC,WA0BxCC,EAAoBU,aAAe,CACjCP,MAAO,GACPC,SAAU,cAQGJ,QCpCTW,E,4JACJ,WAAU,IAAD,EACqBV,KAAKC,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,yBAAKP,UAAU,mBACb,2BACEQ,GAAG,uBACHC,cAAY,uBACZC,QAAQ,iBACRV,UAAU,oBAEV,2BACEQ,GAAG,iBACHG,KAAK,WACLF,cAAY,iBACZM,QAAUT,EACVM,SAAWL,EACXP,UAAU,qBAZd,kC,GAL8BC,IAAMC,WA0B5CY,EAAwBD,aAAe,CACrCP,OAAO,EACPC,SAAU,cAQGO,QCpCTE,E,4JACJ,WAAU,IAAD,EACqBZ,KAAKC,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,yBAAKP,UAAU,QACb,2BACEQ,GAAG,qBACHC,cAAY,qBACZC,QAAQ,eACRV,UAAU,cAJZ,wBAOE,4BACEQ,GAAG,eACHC,cAAY,eACZH,MAAQA,EACRM,SAAWL,EACXP,UAAU,eAEV,4BAAQS,cAAY,gBAAgBH,MAAM,IAA1C,SACA,4BAAQG,cAAY,gBAAgBH,MAAM,UAA1C,cACA,4BAAQG,cAAY,gBAAgBH,MAAM,UAA1C,cACA,4BAAQG,cAAY,gBAAgBH,MAAM,YAA1C,mB,GAtBmBL,IAAMC,WA8BrCc,EAAiBH,aAAe,CAC9BP,MAAO,GACPC,SAAU,cAQGS,QCpCTC,E,4JACJ,WAAU,IAAD,EAQHb,KAAKC,MANPa,EAFK,EAELA,WACAC,EAHK,EAGLA,mBACAC,EAJK,EAILA,eACAC,EALK,EAKLA,mBACAC,EANK,EAMLA,cACAC,EAPK,EAOLA,sBAEF,OACE,6BAASvB,UAAU,cACjB,0BACES,cAAY,kBACZT,UAAU,uBAEV,kBAAC,EAAD,CACEM,MAAQY,EACRX,SAAWY,IAEb,kBAAC,EAAD,CACEb,MAAQc,EACRb,SAAWc,IAEb,kBAAC,EAAD,CACEf,MAAQgB,EACRf,SAAWgB,U,GA1BCtB,IAAMC,WAkC9Be,EAAUJ,aAAe,CACvBK,WAAY,GACZC,mBAAoB,aACpBC,gBAAgB,EAChBC,mBAAoB,aACpBC,cAAe,GACfC,sBAAuB,cAYVN,Q,sBCxDTO,E,4JACJ,WAAU,IAAD,EAC0BpB,KAAKC,MAA9BoB,EADD,EACCA,QAASnB,EADV,EACUA,MAAOoB,EADjB,EACiBA,KAChBf,EAA4Bc,EAA5Bd,KAAMgB,EAAsBF,EAAtBE,KAAMnB,EAAgBiB,EAAhBjB,GAAIoB,EAAYH,EAAZG,QAExB,OACE,yBAAK5B,UAAU,QACb,2BACES,cAAA,UAAiBD,EAAjB,gBACAE,QAAO,UAAMF,EAAN,UACPR,UAAU,cAER4B,EACF,2BACEpB,GAAE,UAAMA,EAAN,UACFG,KAAOA,EACPF,cAAA,UAAiBD,EAAjB,UACAmB,KAAOA,EACPrB,MAAQA,EACRM,SAAWc,EACXG,IAAI,IACJC,IAAI,IACJC,KAAK,MACL/B,UAAU,uB,GAvBAC,IAAMC,WA+B5BsB,EAAQX,aAAe,CACrBY,QAAS,CACPd,KAAM,GACNgB,KAAM,GACNnB,GAAI,GACJoB,QAAS,IAEXtB,MAAO,GACPoB,KAAM,cAiBOF,QCxDTQ,E,4JACJ,WAAU,IAAD,EAC0B5B,KAAKC,MAA9BoB,EADD,EACCA,QAASnB,EADV,EACUA,MAAOoB,EADjB,EACiBA,KAChBf,EAA4Bc,EAA5Bd,KAAMgB,EAAsBF,EAAtBE,KAAMnB,EAAgBiB,EAAhBjB,GAAIoB,EAAYH,EAAZG,QAExB,OACE,yBAAK5B,UAAU,QACb,2BACES,cAAA,UAAiBD,EAAjB,gBACAE,QAAO,UAAMF,EAAN,UACPR,UAAU,cAER4B,EACF,8BACEpB,GAAE,UAAMA,EAAN,UACFG,KAAOA,EACPF,cAAA,UAAiBD,EAAjB,UACAmB,KAAOA,EACPrB,MAAQA,EACRM,SAAWc,EACX1B,UAAU,uB,GApBGC,IAAMC,WA4B/B8B,EAAWnB,aAAe,CACxBY,QAAS,CACPd,KAAM,GACNgB,KAAM,GACNnB,GAAI,GACJoB,QAAS,IAEXtB,MAAO,GACPoB,KAAM,cAcOM,QClDTC,E,4JACJ,WAAU,IAAD,EAC0B7B,KAAKC,MAA9BoB,EADD,EACCA,QAASnB,EADV,EACUA,MAAOoB,EADjB,EACiBA,KAChBC,EAAiCF,EAAjCE,KAAMnB,EAA2BiB,EAA3BjB,GAAIoB,EAAuBH,EAAvBG,QAASM,EAAcT,EAAdS,UACnBC,EAAqCD,EAArCC,eAAgBC,EAAqBF,EAArBE,iBAExB,OACE,yBAAKpC,UAAU,QACb,2BACES,cAAA,UAAiBD,EAAjB,gBACAE,QAAO,UAAMF,EAAN,UACPR,UAAU,cAER4B,EACF,4BACEpB,GAAE,UAAMA,EAAN,UACFC,cAAA,UAAiBD,EAAjB,UACAmB,KAAOA,EACPrB,MAAQA,EACRM,SAAWc,EACX1B,UAAU,eAERmC,EAAeE,KAAI,SAACC,EAAGC,GAAJ,OACnB,4BACEjC,MAAQgC,EACRE,IAAMF,EACN7B,cAAA,UAAiBD,EAAjB,YAEE4B,EAAiBG,c,GA5BZtC,IAAMC,WAsC7B+B,EAASpB,aAAe,CACtBY,QAAS,CACPE,KAAM,GACNnB,GAAI,GACJoB,QAAS,GACTM,UAAW,IAEb5B,MAAO,GACPoB,KAAM,cAiBOO,QC/DTQ,E,4JACJ,WAAU,IAAD,EACmBrC,KAAKC,MAAvBoB,EADD,EACCA,QAASC,EADV,EACUA,KACTf,EAA4Bc,EAA5Bd,KAAM+B,EAAsBjB,EAAtBiB,KAAMlC,EAAgBiB,EAAhBjB,GAAIoB,EAAYH,EAAZG,QAExB,OACE,4BACEpB,GAAE,UAAMA,EAAN,YAAYG,GACd+B,KAAOA,EACP/B,KAAK,SACLF,cAAA,UAAiBD,EAAjB,YAAuBG,GACvBgC,QAAUjB,EACV1B,UAAU,mBAER4B,O,GAda3B,IAAMC,WAoB7BuC,EAAS5B,aAAe,CACtBY,QAAS,CACPd,KAAM,GACN+B,KAAM,GACNlC,GAAI,GACJoB,QAAS,IAEXF,KAAM,cAaOe,QCKAG,EAhDS,CACtBC,IAAK,CACHlC,KAAM,OACNH,GAAI,QACJmB,KAAM,QACNC,QAAS,aAEXkB,IAAK,CACHnC,KAAM,OACNH,GAAI,WACJmB,KAAM,WACNC,QAAS,gBAEXmB,IAAK,CACHpC,KAAM,OACNH,GAAI,QACJmB,KAAM,YACNC,QAAS,UAEXoB,IAAK,CACHrC,KAAM,SACNH,GAAI,SACJmB,KAAM,SACNC,QAAS,mBAEXqB,IAAK,CACHtC,KAAM,OACNH,GAAI,YACJmB,KAAM,YACNC,QAAS,WAEXsB,IAAK,CACH1C,GAAI,QACJmB,KAAM,QACNC,QAAS,YACTM,UAAW,CACTC,eAAgB,CAAC,SAAU,SAAU,YACrCC,iBAAkB,CAAC,aAAQ,aAAW,cAG1Ce,IAAK,CACHxC,KAAM,SACN+B,KAAM,iBACNlC,GAAI,OACJoB,QAAS,oBCqCEwB,E,kDAxEb,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IAEDgD,MAAQ,CACXC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXC,OAAQ,EACRC,MAAO,UAGT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAbF,E,gDAgBnB,YAA0B,IAAXE,EAAU,EAAVA,OACLpC,EAAsBoC,EAAtBpC,KAAMrB,EAAgByD,EAAhBzD,MAAOK,EAASoD,EAATpD,KACrBP,KAAK4D,SAAL,eACGrC,EAAgB,WAAThB,EAAoBsD,OAAO3D,GAASA,M,yBAIhD,SAAY4D,GACVA,EAAMC,iBACN,IAAMC,EAAQhE,KAAKiD,MACFgB,OAAOC,QAAQF,GAAOG,QAAO,SAACC,EAAD,0BAAOhC,EAAP,KAAYlC,EAAZ,YAC5CkE,IAAkB,KAAVlE,GAAwB,cAARkC,GAAuBgC,KAC9C,MAGD7B,EADoBvC,KAAKC,MAAjBsC,SACA,2BAAKyB,GAAN,IAAaK,YAAY,KAChCrE,KAAK4D,SAAS,CACZV,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXC,OAAQ,EACRC,MAAO,c,oBAKb,WAAU,IAAD,EAC0DvD,KAAKiD,MAA9DC,EADD,EACCA,SAAUC,EADX,EACWA,MAAOC,EADlB,EACkBA,UAAWC,EAD7B,EAC6BA,UAAWC,EADxC,EACwCA,OAAQC,EADhD,EACgDA,MAC/Cd,EAAsCD,EAAtCC,IAAKC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,IAAKC,EAAuBJ,EAAvBI,IAAKC,EAAkBL,EAAlBK,IAAKC,EAAaN,EAAbM,IAAKC,EAAQP,EAARO,IACtC,OACE,6BAASnD,UAAU,qBACjB,0BAAMS,cAAY,iBAAiBT,UAAU,kBAC3C,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAASyB,QAAUoB,EAAMvC,MAAQiD,EAAQ7B,KAAOtB,KAAKwD,eACrD,kBAAC,EAAD,CAASnC,QAAUqB,EAAMxC,MAAQgD,EAAW5B,KAAOtB,KAAKwD,eACxD,kBAAC,EAAD,CAASnC,QAAUsB,EAAMzC,MAAQkD,EAAY9B,KAAOtB,KAAKwD,gBAE3D,yBAAK5D,UAAU,oBACb,kBAAC,EAAD,CAAYyB,QAAUwB,EAAM3C,MAAQmD,EAAY/B,KAAOtB,KAAKwD,eAC5D,kBAAC,EAAD,CAASnC,QAAUuB,EAAM1C,MAAQoD,EAAShC,KAAOtB,KAAKwD,eACtD,kBAAC,EAAD,CAAUnC,QAAUyB,EAAM5C,MAAQqD,EAAQjC,KAAOtB,KAAKwD,iBAG1D,6BACE,kBAAC,EAAD,CAAUnC,QAAU0B,EAAMzB,KAAOtB,KAAK0D,oB,GA9DzB7D,IAAMC,WCLvBwE,E,4JACJ,WAAU,IACAhB,EAAWtD,KAAKC,MAAhBqD,OACR,OACE,yBAAK1D,UAAU,oBAAoBS,cAAY,UAC7C,0BAAMT,UAAU,UAAU0D,Q,GALbzD,IAAMC,WAa3BwE,EAAO7D,aAAe,CACpB6C,OAAQ,GAGKgB,QCjBTC,E,4JACJ,WAAU,IAAD,EACiCvE,KAAKC,MAArCkD,EADD,EACCA,MAAOkB,EADR,EACQA,WAAYlE,EADpB,EACoBA,SACrBC,EAAK+C,EAAMqB,cAAcC,QAAQ,MAAO,KAC9C,OACE,2BAAOnE,QAAUF,GACf,2BACEA,GAAKA,EACLG,KAAK,WACLI,QAAU0D,EACV7D,SAAW,kBAAML,EAASgD,MAL9B,gB,GALiBtD,IAAMC,WAkB7ByE,EAAS9D,aAAe,CACtBN,SAAU,aACVkE,YAAY,GASCE,QC3BTG,E,4JACJ,WAAU,IAAD,EACqB1E,KAAKC,MAAzB+D,EADD,EACCA,MAAO7D,EADR,EACQA,SACPgD,EAA8Da,EAA9Db,MAAOD,EAAuDc,EAAvDd,SAAUG,EAA6CW,EAA7CX,UAAWC,EAAkCU,EAAlCV,OAAQF,EAA0BY,EAA1BZ,UAAWiB,EAAeL,EAAfK,WACvD,OACE,yBAAKzE,UAAU,aAAaS,cAAY,cACtC,yBAAKsE,IAAI,cAAc/E,UAAU,mBAAmBgF,IAAMxB,IAC1D,yBAAKxD,UAAU,mBACb,wBAAIS,cAAY,mBAAmBT,UAAU,oBAAoBuD,GACjE,wBAAIvD,UAAU,uBAAuBsD,GACrC,uBAAGtD,UAAU,wBAAwByD,IAEvC,yBAAKzD,UAAU,qBACb,kBAAC,EAAD,CAAUuD,MAAQA,EAAQkB,WAAaA,EAAalE,SAAWA,IAC/D,kBAAC,EAAD,CAAQmD,OAASA,U,GAdHzD,IAAMC,WAqB9B4E,EAAUjE,aAAe,CACvBN,SAAU,cAeGuE,QCrCTG,E,4JACJ,WAAU,IAAD,EACsB7E,KAAKC,MAA1B6E,EADD,EACCA,OAAQ3E,EADT,EACSA,SAEhB,OACE,yBAAKE,cAAY,aAAaT,UAAU,cACpCkF,EAAO7C,KAAI,SAAC+B,GAAD,OAAY,kBAAC,EAAD,CACvB5B,IAAM4B,EAAMb,MACZa,MAAQA,EACR7D,SAAWA,Y,GATGN,IAAMC,WAgB9B+E,EAAUpE,aAAe,CACvBN,SAAU,cAUG0E,QC1Bf,SAASE,EAAYC,EAArB,GAAwD,IAA1BxD,EAAyB,EAAzBA,QAASyD,EAAgB,EAAhBA,OAAQ1E,EAAQ,EAARA,KACzC2E,EAASF,EACPG,EAAS3D,EAAQgD,cAcvB,OAbIW,IACFD,EAASA,EAAOE,QACd,gBAAGjC,EAAH,EAAGA,MAAOD,EAAV,EAAUA,SAAUG,EAApB,EAAoBA,UAApB,OAAoCF,EAAMqB,cAAca,SAASF,IAC1DjC,EAASsB,cAAca,SAASF,IAChC9B,EAAUmB,cAAca,SAASF,OAGxCF,IACFC,EAASA,EAAOE,QAAO,qBAAGf,eAExB9D,IACF2E,EAASA,EAAOE,QAAO,qBAAG7B,QAAsBhD,MAE3C2E,E,IAGHI,E,kDACJ,WAAYrF,GAAQ,IAAD,0BAGT6E,GAFR,cAAM7E,IAEkBA,MAAhB6E,OAHS,OAKjB,EAAK7B,MAAQ,CACXnC,WAAY,GACZE,gBAAgB,EAChBE,cAAe,GACf4D,SACAS,UAAWT,GAGb,EAAKvC,QAAU,EAAKA,QAAQkB,KAAb,gBACf,EAAK1C,mBAAqB,EAAKA,mBAAmB0C,KAAxB,gBAC1B,EAAKxC,mBAAqB,EAAKA,mBAAmBwC,KAAxB,gBAC1B,EAAKtC,sBAAwB,EAAKA,sBAAsBsC,KAA3B,gBAC7B,EAAK+B,WAAa,EAAKA,WAAW/B,KAAhB,gBAjBD,E,8CAoBnB,SAAWlC,GAAO,IAAD,EACkDvB,KAAKiD,MAA9DsC,EADO,EACPA,UAAWzE,EADJ,EACIA,WAAYE,EADhB,EACgBA,eAAgBE,EADhC,EACgCA,cACzCuE,EAAQF,EAAUG,WAAU,qBAAGvC,QAAsB5B,KAC3DgE,EAAUE,GAAOpB,YAAckB,EAAUE,GAAOpB,WAChD,IAAMS,EAASC,EAAYQ,EACzB,CAAE/D,QAASV,EAAYmE,OAAQjE,EAAgBT,KAAMW,IACvDlB,KAAK4D,SAAS,CACZkB,SACAS,gB,qBAIJ,SAAQvB,GAAQ,IACNuB,EAAcvF,KAAKiD,MAAnBsC,UACRvF,KAAK4D,SAAS,CACZ9C,WAAY,GACZE,gBAAgB,EAChBE,cAAe,GACf4D,OAAO,GAAD,mBAAMS,GAAN,CAAiBvB,IACvBuB,UAAU,GAAD,mBAAMA,GAAN,CAAiBvB,Q,gCAI9B,YAAgC,IACtB9D,EADqB,EAAVyD,OACXzD,MADqB,EAEwBF,KAAKiD,MACpD6B,EAASC,EAHc,EAErBQ,UAEN,CAAE/D,QAAStB,EAAO+E,OAJS,EAEVjE,eAEyBT,KAJf,EAEMW,gBAGnClB,KAAK4D,SAAS,CACZ9C,WAAYZ,EACZ4E,a,gCAIJ,YAAgC,IACtBnE,EADqB,EAAVgD,OACXhD,QADqB,EAEoBX,KAAKiD,MAChD6B,EAASC,EAHc,EAErBQ,UAEN,CAAE/D,QAJyB,EAEVV,WAEMmE,OAAQtE,EAASJ,KAJb,EAEEW,gBAG/BlB,KAAK4D,SAAS,CACZ5C,eAAgBL,EAChBmE,a,mCAIJ,YAAmC,IACzB5E,EADwB,EAAVyD,OACdzD,MADwB,EAEkBF,KAAKiD,MACjD6B,EAASC,EAHiB,EAExBQ,UAEN,CAAE/D,QAJ4B,EAEbV,WAEMmE,OAJO,EAEDjE,eAEkBT,KAAML,IACvDF,KAAK4D,SAAS,CACZ1C,cAAehB,EACf4E,a,oBAIJ,WAAU,IAAD,EAMH9E,KAAKiD,MAJPnC,EAFK,EAELA,WACAE,EAHK,EAGLA,eACAE,EAJK,EAILA,cACA4D,EALK,EAKLA,OAEF,OACE,6BACE,kBAAC,EAAD,CACEhE,WAAaA,EACbC,mBAAqBf,KAAKe,mBAC1BC,eAAiBA,EACjBC,mBAAqBjB,KAAKiB,mBAC1BC,cAAgBA,EAChBC,sBAAwBnB,KAAKmB,wBAE/B,kBAAC,EAAD,CACE2D,OAASA,EACT3E,SAAWH,KAAKwF,aAElB,kBAAC,EAAD,CACEjD,QAAUvC,KAAKuC,e,GAnGE1C,IAAMC,WA0GjCwF,EAAa7E,aAAe,CAC1BqE,OAAQ,CAAC,KAOIQ,QC3FAR,EAhDA,CACb,CACE3B,MAAO,cACPD,SAAU,mBACVG,UAAW,iKACXC,OAAQ,IACRF,UAAW,0CACXiB,YAAY,EACZd,MAAO,UAET,CACEJ,MAAO,gBACPD,SAAU,iBACVG,UAAW,4HACXC,OAAQ,IACRF,UAAW,0CACXiB,YAAY,EACZd,MAAO,WAET,CACEJ,MAAO,qBACPD,SAAU,qBACVG,UAAW,qJACXC,OAAQ,EACRF,UAAW,oCACXiB,YAAY,EACZd,MAAO,UAET,CACEJ,MAAO,kBACPD,SAAU,kBACVG,UAAW,2LACXC,OAAQ,IACRF,UAAW,6BACXiB,YAAY,EACZd,MAAO,UAET,CACEJ,MAAO,gBACPD,SAAU,WACVG,UAAW,iKACXC,OAAQ,IACRF,UAAW,oCACXiB,YAAY,EACZd,MAAO,YCxBIoC,G,kKAZb,WACE,OACE,yBAAK/F,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEkF,OAASA,S,GANDjF,IAAMC,YCKJ8F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cfb3f288.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchFormInputText extends React.Component {\n  render() {\n    const { value, callback } = this.props;\n    return (\n      <div className=\"mb-3\">\n        <label\n          id=\"text-input-label\"\n          data-testid=\"text-input-label\"\n          htmlFor=\"text-input\"\n          className=\"form-label\"\n        >\n          Inclui o texto:\n          <input\n            id=\"text-input\"\n            type=\"text\"\n            data-testid=\"text-input\"\n            value={ value }\n            onChange={ callback }\n            className=\"form-control\"\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nSearchFormInputText.defaultProps = {\n  value: '',\n  callback: () => (undefined),\n};\n\nSearchFormInputText.propTypes = {\n  value: PropTypes.string,\n  callback: PropTypes.func,\n};\n\nexport default SearchFormInputText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchFormInputCheckbox extends React.Component {\n  render() {\n    const { value, callback } = this.props;\n    return (\n      <div className=\"mb-3 form-check\">\n        <label\n          id=\"checkbox-input-label\"\n          data-testid=\"checkbox-input-label\"\n          htmlFor=\"checkbox-input\"\n          className=\"form-check-label\"\n        >\n          <input\n            id=\"checkbox-input\"\n            type=\"checkbox\"\n            data-testid=\"checkbox-input\"\n            checked={ value }\n            onChange={ callback }\n            className=\"form-check-input\"\n          />\n          Mostrar somente favoritos\n        </label>\n      </div>\n    );\n  }\n}\n\nSearchFormInputCheckbox.defaultProps = {\n  value: false,\n  callback: () => (undefined),\n};\n\nSearchFormInputCheckbox.propTypes = {\n  value: PropTypes.bool,\n  callback: PropTypes.func,\n};\n\nexport default SearchFormInputCheckbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchFormSelect extends React.Component {\n  render() {\n    const { value, callback } = this.props;\n    return (\n      <div className=\"mb-3\">\n        <label\n          id=\"select-input-label\"\n          data-testid=\"select-input-label\"\n          htmlFor=\"select-input\"\n          className=\"form-label\"\n        >\n          Filtrar por gênero\n          <select\n            id=\"select-input\"\n            data-testid=\"select-input\"\n            value={ value }\n            onChange={ callback }\n            className=\"form-select\"\n          >\n            <option data-testid=\"select-option\" value=\"\">Todos</option>\n            <option data-testid=\"select-option\" value=\"action\">Ação</option>\n            <option data-testid=\"select-option\" value=\"comedy\">Comédia</option>\n            <option data-testid=\"select-option\" value=\"thriller\">Suspense</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nSearchFormSelect.defaultProps = {\n  value: '',\n  callback: () => (undefined),\n};\n\nSearchFormSelect.propTypes = {\n  value: PropTypes.string,\n  callback: PropTypes.func,\n};\n\nexport default SearchFormSelect;\n","/* eslint-disable max-lines-per-function */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchFormInputText from './SearchFormInputText';\nimport SearchFormInputCheckbox from './SearchFormInputCheckbox';\nimport SearchFormSelect from './SearchFormSelect';\n\nclass SearchBar extends React.Component {\n  render() {\n    const {\n      searchText, // uma string\n      onSearchTextChange, // uma callback\n      bookmarkedOnly, // um boolean\n      onBookmarkedChange, // uma callback\n      selectedGenre, // uma string\n      onSelectedGenreChange, // uma callback\n    } = this.props;\n    return (\n      <section className=\"search-bar\">\n        <form\n          data-testid=\"search-bar-form\"\n          className=\"search-bar-elements\"\n        >\n          <SearchFormInputText\n            value={ searchText }\n            callback={ onSearchTextChange }\n          />\n          <SearchFormInputCheckbox\n            value={ bookmarkedOnly }\n            callback={ onBookmarkedChange }\n          />\n          <SearchFormSelect\n            value={ selectedGenre }\n            callback={ onSelectedGenreChange }\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nSearchBar.defaultProps = {\n  searchText: '',\n  onSearchTextChange: () => (undefined),\n  bookmarkedOnly: false,\n  onBookmarkedChange: () => (undefined),\n  selectedGenre: '',\n  onSelectedGenreChange: () => (undefined),\n};\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string,\n  onSearchTextChange: PropTypes.func,\n  bookmarkedOnly: PropTypes.bool,\n  onBookmarkedChange: PropTypes.func,\n  selectedGenre: PropTypes.string,\n  onSelectedGenreChange: PropTypes.func,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AMInput extends React.Component {\n  render() {\n    const { options, value, call } = this.props;\n    const { type, name, id, content } = options;\n\n    return (\n      <div className=\"mb-3\">\n        <label\n          data-testid={ `${id}-input-label` }\n          htmlFor={ `${id}-input` }\n          className=\"form-label\"\n        >\n          { content }\n          <input\n            id={ `${id}-input` }\n            type={ type }\n            data-testid={ `${id}-input` }\n            name={ name }\n            value={ value }\n            onChange={ call }\n            max=\"5\"\n            min=\"0\"\n            step=\"0.1\"\n            className=\"form-control\"\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nAMInput.defaultProps = {\n  options: {\n    type: '',\n    name: '',\n    id: '',\n    content: '',\n  },\n  value: '',\n  call: () => (undefined),\n};\n\nAMInput.propTypes = {\n  options: PropTypes.shape({\n    type: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    content: PropTypes.string,\n  }),\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  call: PropTypes.func,\n};\n\nexport default AMInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AMTextarea extends React.Component {\n  render() {\n    const { options, value, call } = this.props;\n    const { type, name, id, content } = options;\n\n    return (\n      <div className=\"mb-3\">\n        <label\n          data-testid={ `${id}-input-label` }\n          htmlFor={ `${id}-input` }\n          className=\"form-label\"\n        >\n          { content }\n          <textarea\n            id={ `${id}-input` }\n            type={ type }\n            data-testid={ `${id}-input` }\n            name={ name }\n            value={ value }\n            onChange={ call }\n            className=\"form-control\"\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nAMTextarea.defaultProps = {\n  options: {\n    type: '',\n    name: '',\n    id: '',\n    content: '',\n  },\n  value: '',\n  call: () => (undefined),\n};\n\nAMTextarea.propTypes = {\n  options: PropTypes.shape({\n    type: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    content: PropTypes.string,\n  }),\n  value: PropTypes.string,\n  call: PropTypes.func,\n};\n\nexport default AMTextarea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AMSelect extends React.Component {\n  render() {\n    const { options, value, call } = this.props;\n    const { name, id, content, optionTag } = options;\n    const { optionTagValue, optionTagContent } = optionTag;\n\n    return (\n      <div className=\"mb-3\">\n        <label\n          data-testid={ `${id}-input-label` }\n          htmlFor={ `${id}-input` }\n          className=\"form-label\"\n        >\n          { content }\n          <select\n            id={ `${id}-input` }\n            data-testid={ `${id}-input` }\n            name={ name }\n            value={ value }\n            onChange={ call }\n            className=\"form-select\"\n          >\n            { optionTagValue.map((x, i) => (\n              <option\n                value={ x }\n                key={ x }\n                data-testid={ `${id}-option` }\n              >\n                { optionTagContent[i] }\n              </option>\n            )) }\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nAMSelect.defaultProps = {\n  options: {\n    name: '',\n    id: '',\n    content: '',\n    optionTag: [],\n  },\n  value: '',\n  call: () => (undefined),\n};\n\nAMSelect.propTypes = {\n  options: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    content: PropTypes.string,\n    optionTag: PropTypes.shape(\n      [PropTypes.arrayOf(PropTypes.string)],\n      [PropTypes.arrayOf(PropTypes.string)],\n    ),\n  }),\n  value: PropTypes.string,\n  call: PropTypes.func,\n};\n\nexport default AMSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AMButton extends React.Component {\n  render() {\n    const { options, call } = this.props;\n    const { type, form, id, content } = options;\n\n    return (\n      <button\n        id={ `${id}-${type}` }\n        form={ form }\n        type=\"submit\"\n        data-testid={ `${id}-${type}` }\n        onClick={ call }\n        className=\"btn btn-primary\"\n      >\n        { content }\n      </button>\n    );\n  }\n}\n\nAMButton.defaultProps = {\n  options: {\n    type: '',\n    form: '',\n    id: '',\n    content: '',\n  },\n  call: () => (undefined),\n};\n\nAMButton.propTypes = {\n  options: PropTypes.shape({\n    type: PropTypes.string,\n    form: PropTypes.string,\n    id: PropTypes.string,\n    content: PropTypes.string,\n  }),\n  call: PropTypes.func,\n};\n\nexport default AMButton;\n","const setupFormInputs = {\n  tit: {\n    type: 'text',\n    id: 'title',\n    name: 'title',\n    content: 'Título',\n  },\n  sub: {\n    type: 'text',\n    id: 'subtitle',\n    name: 'subtitle',\n    content: 'Subtítulo',\n  },\n  img: {\n    type: 'text',\n    id: 'image',\n    name: 'imagePath',\n    content: 'Imagem',\n  },\n  rat: {\n    type: 'number',\n    id: 'rating',\n    name: 'rating',\n    content: 'Avaliação',\n  },\n  txt: {\n    type: 'text',\n    id: 'storyline',\n    name: 'storyline',\n    content: 'Sinopse',\n  },\n  sel: {\n    id: 'genre',\n    name: 'genre',\n    content: 'Gênero',\n    optionTag: {\n      optionTagValue: ['action', 'comedy', 'thriller'],\n      optionTagContent: ['Ação', 'Comédia', 'Suspense'],\n    },\n  },\n  btn: {\n    type: 'button',\n    form: 'add-movie-form',\n    id: 'send',\n    content: 'Adicionar filme',\n  },\n};\n\nexport default setupFormInputs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AMInput from './AMInput';\nimport AMTextarea from './AMTextarea';\nimport AMSelect from './AMSelect';\nimport AMButton from './AMButton';\nimport setupFormInputs from './addMovieSetup';\n\nclass AddMovie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value, type } = target;\n    this.setState({\n      [name]: type === 'number' ? Number(value) : value,\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const movie = this.state;\n    const validate = Object.entries(movie).reduce((acc, [key, value]) => (\n      acc ? !(value === '' && key !== 'imagePath') : acc\n    ), true);\n    if (validate) {\n      const { onClick } = this.props;\n      onClick({ ...movie, bookmarked: false });\n      this.setState({\n        subtitle: '',\n        title: '',\n        imagePath: '',\n        storyline: '',\n        rating: 0,\n        genre: 'action',\n      });\n    }\n  }\n\n  render() {\n    const { subtitle, title, imagePath, storyline, rating, genre } = this.state;\n    const { tit, sub, img, rat, txt, sel, btn } = setupFormInputs;\n    return (\n      <section className=\"add-movie-section\">\n        <form data-testid=\"add-movie-form\" className=\"add-movie-form\">\n          <div className=\"add-movie-colunm\">\n            <AMInput options={ tit } value={ title } call={ this.handleChange } />\n            <AMInput options={ sub } value={ subtitle } call={ this.handleChange } />\n            <AMInput options={ img } value={ imagePath } call={ this.handleChange } />\n          </div>\n          <div className=\"add-movie-colunm\">\n            <AMTextarea options={ txt } value={ storyline } call={ this.handleChange } />\n            <AMInput options={ rat } value={ rating } call={ this.handleChange } />\n            <AMSelect options={ sel } value={ genre } call={ this.handleChange } />\n          </div>\n        </form>\n        <div>\n          <AMButton options={ btn } call={ this.handleClick } />\n        </div>\n      </section>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: 0,\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Favorite extends React.Component {\n  render() {\n    const { title, bookmarked, callback } = this.props;\n    const id = title.toLowerCase().replace(/\\s/g, '-');\n    return (\n      <label htmlFor={ id }>\n        <input\n          id={ id }\n          type=\"checkbox\"\n          checked={ bookmarked }\n          onChange={ () => callback(title) }\n        />\n        Favorito\n      </label>\n    );\n  }\n}\n\nFavorite.defaultProps = {\n  callback: () => (undefined),\n  bookmarked: false,\n};\n\nFavorite.propTypes = {\n  title: PropTypes.string.isRequired,\n  bookmarked: PropTypes.bool,\n  callback: PropTypes.func,\n};\n\nexport default Favorite;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\nimport Favorite from './Favorite';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie, callback } = this.props;\n    const { title, subtitle, storyline, rating, imagePath, bookmarked } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <div className=\"movie-card-footer\">\n          <Favorite title={ title } bookmarked={ bookmarked } callback={ callback } />\n          <Rating rating={ rating } />\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieCard.defaultProps = {\n  callback: () => (undefined),\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n    bookmarked: PropTypes.bool,\n  }).isRequired,\n  callback: PropTypes.func,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies, callback } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => (<MovieCard\n          key={ movie.title }\n          movie={ movie }\n          callback={ callback }\n        />))}\n      </div>\n    );\n  }\n}\n\nMovieList.defaultProps = {\n  callback: () => (undefined),\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n  callback: PropTypes.func,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport MovieList from './MovieList';\n\nfunction applyFilter(array, { content, marked, type }) {\n  let result = array;\n  const search = content.toLowerCase();\n  if (search) {\n    result = result.filter(\n      ({ title, subtitle, storyline }) => title.toLowerCase().includes(search)\n          || subtitle.toLowerCase().includes(search)\n          || storyline.toLowerCase().includes(search),\n    );\n  }\n  if (marked) {\n    result = result.filter(({ bookmarked }) => bookmarked);\n  }\n  if (type) {\n    result = result.filter(({ genre }) => genre === type);\n  }\n  return result;\n}\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { movies } = this.props;\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n      allMovies: movies,\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.onBookmarkedChange = this.onBookmarkedChange.bind(this);\n    this.onSelectedGenreChange = this.onSelectedGenreChange.bind(this);\n    this.onFavorite = this.onFavorite.bind(this);\n  }\n\n  onFavorite(name) {\n    const { allMovies, searchText, bookmarkedOnly, selectedGenre } = this.state;\n    const index = allMovies.findIndex(({ title }) => title === name);\n    allMovies[index].bookmarked = !allMovies[index].bookmarked;\n    const movies = applyFilter(allMovies,\n      { content: searchText, marked: bookmarkedOnly, type: selectedGenre });\n    this.setState({\n      movies,\n      allMovies,\n    });\n  }\n\n  onClick(movie) {\n    const { allMovies } = this.state;\n    this.setState({\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: [...allMovies, movie],\n      allMovies: [...allMovies, movie],\n    });\n  }\n\n  onSearchTextChange({ target }) {\n    const { value } = target;\n    const { allMovies, bookmarkedOnly, selectedGenre } = this.state;\n    const movies = applyFilter(allMovies,\n      { content: value, marked: bookmarkedOnly, type: selectedGenre });\n    this.setState({\n      searchText: value,\n      movies,\n    });\n  }\n\n  onBookmarkedChange({ target }) {\n    const { checked } = target;\n    const { allMovies, searchText, selectedGenre } = this.state;\n    const movies = applyFilter(allMovies,\n      { content: searchText, marked: checked, type: selectedGenre });\n    this.setState({\n      bookmarkedOnly: checked,\n      movies,\n    });\n  }\n\n  onSelectedGenreChange({ target }) {\n    const { value } = target;\n    const { allMovies, searchText, bookmarkedOnly } = this.state;\n    const movies = applyFilter(allMovies,\n      { content: searchText, marked: bookmarkedOnly, type: value });\n    this.setState({\n      selectedGenre: value,\n      movies,\n    });\n  }\n\n  render() {\n    const {\n      searchText,\n      bookmarkedOnly,\n      selectedGenre,\n      movies,\n    } = this.state;\n    return (\n      <div>\n        <SearchBar\n          searchText={ searchText }\n          onSearchTextChange={ this.onSearchTextChange }\n          bookmarkedOnly={ bookmarkedOnly }\n          onBookmarkedChange={ this.onBookmarkedChange }\n          selectedGenre={ selectedGenre }\n          onSelectedGenreChange={ this.onSelectedGenreChange }\n        />\n        <MovieList\n          movies={ movies }\n          callback={ this.onFavorite }\n        />\n        <AddMovie\n          onClick={ this.onClick }\n        />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.defaultProps = {\n  movies: [{}],\n};\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\nimport movies from './data';\n\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <MovieLibrary\n          movies={ movies }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n// assigned by Tiago Sathler.\n// testing rsa signature\n// testing rsa signature again\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}